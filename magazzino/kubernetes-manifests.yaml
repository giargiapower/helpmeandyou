---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml --out kubernetes-manifests.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: magazzino
  name: magazzino
spec:
  ports:
    - name: "8087"
      port: 8087
      targetPort: 8087
  selector:
    io.kompose.service: magazzino
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml --out kubernetes-manifests.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: dbpostgresqlmagazzino
  name: dbpostgresqlmagazzino
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: dbpostgresqlmagazzino
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml --out kubernetes-manifests.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: magazzino
  name: magazzino
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: magazzino
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml --out kubernetes-manifests.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/magazzino-magazzino: "true"
        io.kompose.service: magazzino
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: postgres
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://dbpostgresqlmagazzino:5432/postgres
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
          image: giargiapower/helpmeandyou:magazzino
          name: magazzino
          ports:
            - containerPort: 8087
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: magazzino-magazzino
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/magazzino-magazzino: "true"
  podSelector:
    matchLabels:
      io.kompose.network/magazzino-magazzino: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml --out kubernetes-manifests.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: dbpostgresqlmagazzino
  name: dbpostgresdbpostgresqlmagazzinoql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: dbpostgresqlmagazzino
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml --out kubernetes-manifests.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/magazzino-magazzino: "true"
        io.kompose.service: dbpostgresqlmagazzino
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: restart
              value: unless-stopped
          image: postgres
          name: postgres-mag
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: db-data
  name: db-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

